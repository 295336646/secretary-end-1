<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="usts.cl.dao.GroupMapper">
    <resultMap id="BaseResultMap" type="usts.cl.bean.Group">
        <result column="sid" jdbcType="VARCHAR" property="sid"/>
        <result column="sclass" jdbcType="VARCHAR" property="sclass"/>
        <result column="sname" jdbcType="VARCHAR" property="sname"/>
        <result column="tid" jdbcType="VARCHAR" property="tid"/>
        <result column="tname" jdbcType="VARCHAR" property="tname"/>
        <result column="cname" jdbcType="VARCHAR" property="cname"/>
        <result column="tjudge" jdbcType="VARCHAR" property="tjudge"/>
        <result column="tjudgeName" jdbcType="VARCHAR" property="tjudgename"/>
        <result column="groupNum" jdbcType="INTEGER" property="groupnum"/>
        <result column="leader" jdbcType="TINYINT" property="leader"/>
    </resultMap>
    <resultMap id="Group" type="usts.cl.bean.Group" extends="BaseResultMap">
        <association property="grade" resultMap="usts.cl.dao.GradeMapper.BaseResultMap"></association>
        <association property="student" resultMap="usts.cl.dao.StudentMapper.BaseResultMap"></association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        sid, sclass, sname, tid, tname, cname, tjudge, tjudgeName, groupNum, leader
    </sql>
    <sql id="Group_Column_List">
        g.*, grade.*, s.*
    </sql>
    <select id="selectByLeader" resultMap="BaseResultMap">
        select *
        from tab_group g
        where leader = 1
        group by groupNum
        having g.leader = 1
    </select>
    <select id="selectByGroup" parameterType="usts.cl.bean.GroupExample" resultMap="Group">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Group_Column_List"/>
        from tab_group g
        inner join tab_student s on g.sid=s.sid
        inner join tab_grade grade on s.gid = grade.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByLikeWithGrade" parameterType="usts.cl.bean.GroupExample" resultMap="Group">
        select
        <include refid="Group_Column_List"/>
        from tab_group g
        inner join tab_student s on g.sid=s.sid
        inner join tab_grade grade on s.gid = grade.id
        <where>
            <if test="groupNum != null">
                g.groupNum = #{groupNum}
            </if>
            <if test="tjudge != null">
                and g.tjudge like CONCAT(#{tjudge},'%')
            </if>
            <if test="tjudgeName != null">
                and g.tjudgeName like CONCAT(#{tjudgeName},'%')
            </if>

        </where>
    </select>
    <select id="selectByExample" parameterType="usts.cl.bean.GroupExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tab_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="usts.cl.bean.GroupExample">
        delete from tab_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="usts.cl.bean.Group">
        insert into tab_group (sid, sclass, sname,
                               tid, tname, cname,
                               tjudge, tjudgeName, groupNum,
                               leader)
        values (#{sid,jdbcType=VARCHAR}, #{sclass,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR},
                #{tid,jdbcType=VARCHAR}, #{tname,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR},
                #{tjudge,jdbcType=VARCHAR}, #{tjudgename,jdbcType=VARCHAR}, #{groupnum,jdbcType=INTEGER},
                #{leader,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="usts.cl.bean.Group">
        insert into tab_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="sclass != null">
                sclass,
            </if>
            <if test="sname != null">
                sname,
            </if>
            <if test="tid != null">
                tid,
            </if>
            <if test="tname != null">
                tname,
            </if>
            <if test="cname != null">
                cname,
            </if>
            <if test="tjudge != null">
                tjudge,
            </if>
            <if test="tjudgename != null">
                tjudgeName,
            </if>
            <if test="groupnum != null">
                groupNum,
            </if>
            <if test="leader != null">
                leader,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=VARCHAR},
            </if>
            <if test="sclass != null">
                #{sclass,jdbcType=VARCHAR},
            </if>
            <if test="sname != null">
                #{sname,jdbcType=VARCHAR},
            </if>
            <if test="tid != null">
                #{tid,jdbcType=VARCHAR},
            </if>
            <if test="tname != null">
                #{tname,jdbcType=VARCHAR},
            </if>
            <if test="cname != null">
                #{cname,jdbcType=VARCHAR},
            </if>
            <if test="tjudge != null">
                #{tjudge,jdbcType=VARCHAR},
            </if>
            <if test="tjudgename != null">
                #{tjudgename,jdbcType=VARCHAR},
            </if>
            <if test="groupnum != null">
                #{groupnum,jdbcType=INTEGER},
            </if>
            <if test="leader != null">
                #{leader,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="usts.cl.bean.GroupExample" resultType="java.lang.Long">
        select count(*) from tab_group
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateBatch">
        <foreach collection="groups" item="group" separator=";">
            UPDATE tab_group g
            <set>
                <if test="group.tjudge != null">
                    g.tjudge =#{group.tjudge},
                </if>
                <if test="group.tjudgename != null">
                    g.tjudgename =#{group.tjudgename},
                </if>
                <if test="group.groupnum != null">
                    g.groupnum =#{group.groupnum},
                </if>
                <if test="group.leader != null">
                    g.leader =#{group.leader}
                </if>
            </set>
            <where>
                g.sid =#{group.sid}
            </where>
        </foreach>

    </update>
    <update id="updateByExampleSelective" parameterType="map">
        update tab_group
        <set>
            <if test="record.sid != null">
                sid = #{record.sid,jdbcType=VARCHAR},
            </if>
            <if test="record.sclass != null">
                sclass = #{record.sclass,jdbcType=VARCHAR},
            </if>
            <if test="record.sname != null">
                sname = #{record.sname,jdbcType=VARCHAR},
            </if>
            <if test="record.tid != null">
                tid = #{record.tid,jdbcType=VARCHAR},
            </if>
            <if test="record.tname != null">
                tname = #{record.tname,jdbcType=VARCHAR},
            </if>
            <if test="record.cname != null">
                cname = #{record.cname,jdbcType=VARCHAR},
            </if>
            <if test="record.tjudge != null">
                tjudge = #{record.tjudge,jdbcType=VARCHAR},
            </if>
            <if test="record.tjudgename != null">
                tjudgeName = #{record.tjudgename,jdbcType=VARCHAR},
            </if>
            <if test="record.groupnum != null">
                groupNum = #{record.groupnum,jdbcType=INTEGER},
            </if>
            <if test="record.leader != null">
                leader = #{record.leader,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tab_group
        set sid = #{record.sid,jdbcType=VARCHAR},
        sclass = #{record.sclass,jdbcType=VARCHAR},
        sname = #{record.sname,jdbcType=VARCHAR},
        tid = #{record.tid,jdbcType=VARCHAR},
        tname = #{record.tname,jdbcType=VARCHAR},
        cname = #{record.cname,jdbcType=VARCHAR},
        tjudge = #{record.tjudge,jdbcType=VARCHAR},
        tjudgeName = #{record.tjudgename,jdbcType=VARCHAR},
        groupNum = #{record.groupnum,jdbcType=INTEGER},
        leader = #{record.leader,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>